import os
import funçõesDOjogo
import time 
import random

while (True):
    os.system("cls")
    funçõesDOjogo.menuDEjogo()
    user = int(input("\033[1;30mopção: "))

    if (user == 4):
        os.system("cls")
        funçõesDOjogo.fIM()
        break
    
    elif (user == 1):
        os.system("cls")
        print("Escolha : 21")
        mao_usuario = 0
        mao_bot = 0

        print("\033[1;30mPuxe uma carta...\033[0;0m")
        while (True):
            card = random.randint (1,10)
            

            funçõesDOjogo.tabela(mao_usuario)
            print("\033[1;30;41mdigite 'quit' para sair\033[0;0m")
            escolha = input("\033[1;30mDeseja pegar uma carta?\033[0;0m").lower()

            os.system("cls")
            if (escolha == "quit"):
                
                if (mao_usuario > mao_bot):
                    funçõesDOjogo.win(mao_usuario)
                    time.sleep (3)
                    funçõesDOjogo.tabela(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    time.sleep (3)

                    break
                elif(mao_bot > mao_usuario):
                    funçõesDOjogo.win(mao_bot)
                    time.sleep (3)
                    funçõesDOjogo.tabelado2(mao_bot)
                    funçõesDOjogo.tabela(mao_usuario)
                    time.sleep (3)
                    break
                else:
                    funçõesDOjogo.empate()
                    funçõesDOjogo.tabela(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    time.sleep (3)

                    break
                
            elif (escolha == "sim"):
                mao_usuario += card
                if (mao_usuario > 21):
                    print("\033[1;33m=- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
                    funçõesDOjogo.lose(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    funçõesDOjogo.tabela(mao_usuario)
                    time.sleep(5)
                    break
                elif (mao_usuario == 21):
                    print("\033[1;33m=- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                    funçõesDOjogo.win(mao_usuario)
                    funçõesDOjogo.tabela(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    time.sleep(5)
                    break
                
        
                    
            elif (escolha == "nao"):

                if (mao_usuario > 21):
                    print("\033[1;33m=- \033[1;31mVC PERDEU \033[1;33m-=\033[0;0m")
                    funçõesDOjogo.lose(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    funçõesDOjogo.tabela(mao_usuario)
                    time.sleep(5)
                    break
                elif (mao_usuario == 21):
                    print("\033[1;33m=- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                    funçõesDOjogo.win(mao_usuario)
                    funçõesDOjogo.tabela(mao_usuario)
                    funçõesDOjogo.tabelado2(mao_bot)
                    time.sleep(5)
                    break
                    
            else:
                print("\033[1;34merror, digita certo...\033[0;0m")
                continue

            mao_bot += card
            if (mao_bot > 15):
                escolha_da_maquinaa = random.randint(0,1)
                if (escolha_da_maquinaa == 0):
                    mao_bot += card 
                    if (mao_bot > 21):
                        print("\033[1;33m=- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                        funçõesDOjogo.lose(mao_bot)
                        funçõesDOjogo.tabela(mao_usuario)
                        funçõesDOjogo.tabelado2(mao_bot)
                        time.sleep (5)
                        break
                    elif (mao_bot == 21):
                        print("\033[1;33m=- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
                        funçõesDOjogo.win(mao_bot)
                        funçõesDOjogo.tabela(mao_usuario)
                        funçõesDOjogo.tabelado2(mao_bot)
                        time.sleep(5)
                        break
                    else:
                        continue
                elif (escolha_da_maquinaa == 1):
                    if (mao_bot > 21):
                        print("\033[1;33m=- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                        funçõesDOjogo.lose(mao_bot)
                        funçõesDOjogo.tabela(mao_usuario)
                        funçõesDOjogo.tabelado2(mao_bot)
                        time.sleep (5)
                        break
                    elif (mao_bot == 21):
                        print("\033[1;33m=- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
                        funçõesDOjogo.win(mao_bot)
                        funçõesDOjogo.tabela(mao_usuario)
                        funçõesDOjogo.tabelado2(mao_bot)
                    else:
                        continue
    elif (user == 2):
        os.system("cls")
        print("\033[1;33m================================")
        print("escolha - \033[1;32mpedra papel e tesoura")
        print("\033[1;33m================================")
        print("\033[1;30;41mdigite 'quit' para sair\033[0;0m")  
        user22 = input("\033[1;30mdigite seu nickname: ")
        nome = user22

        pontos_do_usuario = 0
        pontos_da_maquina = 0
        opcoes = ["pedra","papel","tesoura"]
        
        os.system("cls")
        print("bora jogar...\033[0;0m")
        while (True):

            time.sleep(2)
            os.system("cls")    
            funçõesDOjogo.pedrapapeletesoura()
            user2 = input("\033[1;30mescolha: ").lower()
            os.system("cls")
            sorteio = random.randint(0,2)
            escolha_da_maquina = opcoes[sorteio]

            if (user2 == "quit"):
                funçõesDOjogo.fIM()
                break

            print("JO",end="",flush=True)
            time.sleep(0.5)
            print("QUEN",end="",flush=True)
            time.sleep(0.5)
            print("PO",end="",flush=True)
            time.sleep(0.5)
            print(".",end="",flush=True)
            time.sleep(0.5)
            print(".",end="",flush=True)
            time.sleep(0.5)
            print(".\033[0;0m")

            
            if (user2 == "papel" and escolha_da_maquina == "pedra"):
                funçõesDOjogo.papelepedra()
                print("\033[1;33m=- \033[1;35mPAPEL EMBRULHA PEDRA \033[1;33m-=")
                print("\033[1;33m   =- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                pontos_do_usuario += 1
            elif (user2 == "papel" and escolha_da_maquina == "tesoura"):
                funçõesDOjogo.papeletesoura()
                print("\033[1;33m=- \033[1;35mTESOURA CORTA PAPEL \033[1;33m-=\033[0;0m")
                print("\033[1;33m   =- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
                pontos_da_maquina += 1
            elif (user2 == "papel" and escolha_da_maquina == "papel"):
                funçõesDOjogo.empate()
                funçõesDOjogo.papelpapel()
                

            elif (user2 == "pedra" and escolha_da_maquina == "papel"):
                funçõesDOjogo.pedrapapel()
                pontos_da_maquina += 1
                print("\033[1;33m=- \033[1;35mPAPEL EMBRULHA PEDRA \033[1;33m-=\033[0;0m")
                print("\033[1;33m   =- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
            elif (user2 == "pedra" and escolha_da_maquina == "tesoura"):
               funçõesDOjogo.pedratesoura()
               print("\033[1;33m=- \033[1;35mPEDRA QUEBRA TESOURA \033[1;33m-=\033[0;0m")
               print("\033[1;33m   =- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
               pontos_do_usuario += 1
            elif (user2 == "pedra" and escolha_da_maquina == "pedra"):
                funçõesDOjogo.empate()
                funçõesDOjogo.pedrapedra()
                
            
            elif (user2 == "tesoura" and escolha_da_maquina == "papel"):
                funçõesDOjogo.tesourapapel()
                print("\033[1;33m=- \033[1;35mTESOURA CORTA O PAPEL \033[1;33m-=\033[0;0m")
                print("\033[1;33m   =- \033[1;32mVOCE GANHOU \033[1;33m-=\033[0;0m")
                pontos_do_usuario += 1 
            elif (user2 == "tesoura" and escolha_da_maquina == "pedra"):
                funçõesDOjogo.tesourapedra()
                print("\033[1;33m=- \033[1;35mPEDRA QUEBRA TESOURA \033[1;33m-=\033[0;0m")
                print("\033[1;33m   =- \033[1;31mVOCE PERDEU \033[1;33m-=\033[0;0m")
                pontos_da_maquina += 1
            elif (user2 == "tesoura" and escolha_da_maquina == "tesoura"):
                funçõesDOjogo.empate()
                funçõesDOjogo.tesouratesoura()
                
            else:

                print("\033[1;31merror, tente novamente\033[0;0m")
        funçõesDOjogo.contagem()
        


        if (pontos_da_maquina > pontos_do_usuario):
            print("\033[1;31;41mVOCE PERDEU, VENCEDOR FOI - BOT0333448\033[0;0m")
            funçõesDOjogo.tabela(pontos_do_usuario)
            funçõesDOjogo.tabelado2(pontos_da_maquina)
            time.sleep (5)
            
        elif (pontos_do_usuario > pontos_da_maquina):
            
            print("\033[1;30;42mVOCE GANHOU, VENCEDOR FOI -",user22,"\033[0;0m")
            funçõesDOjogo.tabela(pontos_do_usuario)
            funçõesDOjogo.tabelado2(pontos_da_maquina)
            time.sleep (5)
        else:
            funçõesDOjogo.empate()
            print("\033[1;31mNAO HOUVE VENCEDOR\033[0;0m")
            time.sleep(5)

    elif (user == 3):
        print("\033[1;33m==========================\033[0;0m")
        print("\033[1;33m|\033[1;31m Escolha - PAR OU IMPAR \033[1;33m|\033[0;0m")
        print("\033[1;33m==========================\033[0;0m")
        time.sleep (5)
        os.system("cls")

        

        while (True):
            palpites_do_adve = 0
            palpites_do_user = 0
            print("\033[1;30;41mdigite 'quit' para sair\033[0;0m")
            user = input("\033[1;30mPar ou Impar: ").lower()
            
            time.sleep (3)

            if (user == "par"):
                while (True):
                    os.system("cls")
                    adversario = random.randint(0,10)
                    print("\033[1;30mdigite 'quit' para trocar ou sair do jogo\033[0;0m")
                    user3 = input("\033[1;30mescolha um numero de 0 a 10: ")
                    conta = int(user3) + adversario

                    if (user3 == "quit"):
                        funçõesDOjogo.fIM()
                        time.sleep(5)
                        break
        
                    
                    elif (conta %2==0):
                        funçõesDOjogo.par(user3)
                        funçõesDOjogo.impar(adversario)
                        palpites_do_user += 1
                        time.sleep(4)
                        os.system("cls")
                        funçõesDOjogo.acertoPAR(conta)
                        print("\033[1;33m=- \033[1;32mYOU WIN \033[1;33m-=\033[0;0m")
                        time.sleep(5)
                    else:
                        funçõesDOjogo.par(user3)
                        funçõesDOjogo.impar(adversario)
                        palpites_do_adve += 1
                        time.sleep(4)
                        os.system("cls")
                        funçõesDOjogo.acertoimpar(conta)
                        print("\033[1;33m=- \033[1;31mYOU LOSE \033[1;33m-=\033[0;0m")
                        time.sleep(5)
            elif (user == "impar"):
                while (True):
                    os.system("cls")
                    adversario = random.randint(0,10)
                    print("\033[1;30mdigite 'quit' para trocar ou sair do jogo\033[0;0m")
                    user3 = input("\033[1;30mescolha um numero de 0 a 10: ")
                    

                    if (user3 == "quit"):
                        funçõesDOjogo.fIM()
                        time.sleep(5)
                        break

                    conta = int(user3) + adversario
        
                    
                    if (conta %2==1):
                        funçõesDOjogo.par(adversario)
                        funçõesDOjogo.impar(user3)
                        palpites_do_user += 1
                        time.sleep(4)
                        os.system("cls")
                        funçõesDOjogo.acertoimpar(conta)
                        print("\033[1;33m=- \033[1;32mYOU WIN \033[1;33m-=\033[0;0m")
                        time.sleep(5)
                    else:
                        funçõesDOjogo.par(adversario)
                        funçõesDOjogo.impar(user3)
                        palpites_do_adve += 1
                        time.sleep(4)
                        os.system("cls")
                        funçõesDOjogo.acertoPAR(conta)
                        print("\033[1;33m=- \033[1;31mYOU LOSE \033[1;33m-=\033[0;0m")
                        time.sleep(5)
            else:
                print("\033[1;31merror, invalido\033[0;0m")        
                
        funçõesDOjogo.contagem()


    else:
        print("\033[1;31merror, n existe\033[0;0m")
        
        ===========================================================================================================================
        imports 
        import time
import random
import math
import os
from turtle import clear



def menuDEjogo():
    print("\033[1;33m=-=-=-=-=-=-\033[1;31mMENU\033[1;33m-=-=-=-=-=-=\033[0;0m")
    print("\033[1;31m 1.\033[1;33m 21")
    print("\033[1;31m 2. \033[1;33mPEDRA PAPEL E TESOURA")
    print("\033[1;31m 3. \033[1;33mPAR OU IMPAR")
    print("\033[1;31m 4. \033[1;33mSair")
    print("\033[1;33m=-=-=-=-=-=-=-=-=-=-=-=-=-=-\033[0;0m")


def numeroALEATORIOdo21():
    carta = random.randint(1,10)
    print(carta)


def limparTELA():
    if (os.name == "nt"):
        os.system("cls")
    else:
        os.system("clear")
    if (os.name == "nt"):
        os.system("cls")
    else:
        os.system("clear")

def fIM():
    print("Hasta La Vista ",end="",flush = True)
    time.sleep (0.5)
    print("Babe",end="",flush = True)
    time.sleep (0.5)
    print(".",end="",flush = True)
    time.sleep (0.5)
    print(".",end="",flush = True)
    time.sleep (0.5)
    print(".")

def tabela(n1):
    print("\033[1;33m=====================\033[0;0m")
    print("\033[1;33m|   \033[1;30msuas cartas     \033[1;33m|\033[0;0m")
    print("\033[1;33m|                   \033[1;33m|\033[0;0m")
    print("\033[1;33m|        \033[1;30m",n1,"        \033[1;33m|\033[0;0m")
    print("\033[1;33m|                   \033[1;33m|\033[0;0m")
    print("\033[1;33m=====================\033[0;0m")

def tabelado2(n1):
    print("\033[1;33m=====================\033[0;0m")
    print("\033[1;33m|  \033[1;30mcartas rivais \033[0;0m   \033[1;33m|\033[0;0m")
    print("\033[1;33m|                   |\033[0;0m")
    print("\033[1;33m|       \033[1;30m",n1,"        \033[1;33m|\033[0;0m")
    print("\033[1;33m|                   |\033[0;0m")
    print("\033[1;33m=====================\033[0;0m")

def lose(n1):
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;31m",n1,"perdeu\033[0;0m   \033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")


def win(n1):
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m",n1,"ganhou\033[0;0m   \033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def empate():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|   \033[1;33mempate\033[0;0m    \033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def pedrapapeletesoura():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m  ✂️  📃  🧱 \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def papeletesoura():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    📃  ✂️   \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def pedratesoura():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    🧱  ✂️  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def tesouratesoura():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    ✂️  ✂️  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")
#==========================================================================


def papelepedra():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    📃  🧱  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def pedrapedra():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    🧱  🧱  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def tesourapedra():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    ✂️  🧱  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")
#===========================================================================


def papelpapel():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    📃  📃   \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def pedrapapel():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    🧱  📃  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")

def tesourapapel():
    print("\033[1;33m===============\033[0;0m")
    print("\033[1;33m|\033[1;32m    ✂️  📃  \033[0;0m\033[1;33m|\033[0;0m")
    print("\033[1;33m===============\033[0;0m")


def contagem():
    print("É ",end="",flush=True)
    time.sleep(0.2)
    print("H",end="",flush=True)
    time.sleep(0.2)
    print("O",end="",flush=True)
    time.sleep(0.2)
    print("R",end="",flush=True)
    time.sleep(0.2)
    print("A ",end="",flush=True)
    time.sleep(0.2)
    print("D",end="",flush=True)
    time.sleep(0.2)
    print("A ",end="",flush=True)
    time.sleep(0.2)
    print("C",end="",flush=True)
    time.sleep(0.2)
    print("O",end="",flush=True)
    time.sleep(0.2)
    print("N",end="",flush=True)
    time.sleep(0.2)
    print("T",end="",flush=True)
    time.sleep(0.2)
    print("A",end="",flush=True)
    time.sleep(0.2)
    print("G",end="",flush=True)
    time.sleep(0.2)
    print("E",end="",flush=True)
    time.sleep(0.2)
    print("M")  

"""def dicasDOPARouimpar():
    print("\033[1;33m=====================================\033[0;0m")
    print("\033[1;30mganha quem acertar o palpite dado ganha ")
    print("escolha um quantos dedos mostrar")
    print("\033[1;33m=====================================\033[0;0m")

def acertoPAR(n1):
    print("\033[1;30;42m===================\033[0;0m")
    print("\033[1;30;42m|\033[0;0m      \033[1;32mpar         \033[1;30;42m|\033[0;0m")
    print("\033[1;30;42m|\033[0;0m   \033[1;32m",n1,"   win      \033[1;30;42m|\033[0;0m")
    print("\033[1;30;42m===================\033[0;0m")

def par(n1):
    print("\033[1;30;43m===================\033[0;0m")
    print("\033[1;30;43m|\033[0;0m      \033[1;33mpar        \033[1;30;43m|\033[0;0m")
    print("\033[1;30;43m|\033[0;0m      \033[1;33m",n1,"        \033[1;30;43m|\033[0;0m")
    print("\033[1;30;43m===================\033[0;0m")

def erroPAR(n1):
    print("\033[1;30;41m===================\033[0;0m")
    print("\033[1;30;41m|\033[0;0m      \033[1;31mpar        \033[1;30;41m|\033[0;0m")
    print("\033[1;30;41m|\033[0;0m   \033[1;31m",n1,"  lose    \033[1;30;41m|\033[0;0m")
    print("\033[1;30;41m===================\033[0;0m")
    


def impar(n1):
    print("\033[1;30;43m===================\033[0;0m")
    print("\033[1;30;43m|\033[0;0m      \033[1;33m Impar     \033[1;30;43m|\033[0;0m")
    print("\033[1;30;43m|\033[0;0m      \033[1;33m",n1,"        \033[1;30;43m|\033[0;0m")
    print("\033[1;30;43m===================\033[0;0m")
    

def acertoimpar(n1):
    print("\033[1;30;42m===================\033[0;0m")
    print("\033[1;30;42m|\033[0;0m      \033[1;32m Impar     \033[1;30;42m|\033[0;0m")
    print("\033[1;30;42m|\033[0;0m   \033[1;32m",n1,"   win    \033[1;30;42m|\033[0;0m")
    print("\033[1;30;42m===================\033[0;0m")
    
def erroIMPAR(n1):
    print("\033[1;30;41m===================\033[0;0m")
    print("\033[1;30;41m|\033[0;0m      \033[1;31m Impar     \033[1;30;41m|\033[0;0m")
    print("\033[1;30;41m|\033[0;0m   \033[1;31m",n1,"  lose    \033[1;30;41m|\033[0;0m")
    print("\033[1;30;41m===================\033[0;0m")"""
    
    





    







            
        
        




            
